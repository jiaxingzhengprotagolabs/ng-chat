!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/core"),require("@angular/common/http"),require("@angular/platform-browser"),require("rxjs/operators"),require("@angular/common"),require("@angular/forms")):"function"==typeof define&&define.amd?define("ng-chat",["exports","@angular/core","@angular/common/http","@angular/platform-browser","rxjs/operators","@angular/common","@angular/forms"],t):t(e["ng-chat"]={},e.ng.core,e.ng.common.http,e.ng.platformBrowser,e.rxjs.operators,e.ng.common,e.ng.forms)}(this,function(e,i,t,n,o,s,a){"use strict";var r=function(){function e(){this.friendsListChangedHandler=function(e){},this.messageReceivedHandler=function(e,t){}}return e.prototype.onFriendsListChanged=function(e){this.friendsListChangedHandler(e)},e.prototype.onMessageReceived=function(e,t){this.messageReceivedHandler(e,t)},e}(),d={Text:1,File:2};d[d.Text]="Text",d[d.File]="File";var l=function I(){this.type=d.Text},c={Online:0,Busy:1,Away:2,Offline:3};c[c.Online]="Online",c[c.Busy]="Busy",c[c.Away]="Away",c[c.Offline]="Offline";var h=function T(){},p=function M(){this.messages=[],this.newMessage="",this.isCollapsed=!1,this.isLoadingHistory=!1,this.hasFocus=!1,this.hasMoreMessages=!0,this.historyPage=0},g=function(e,t){return(g=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i])})(e,t)};function u(n,o){var s,a,r,e,d={label:0,sent:function(){if(1&r[0])throw r[1];return r[1]},trys:[],ops:[]};return e={next:t(0),"throw":t(1),"return":t(2)},"function"==typeof Symbol&&(e[Symbol.iterator]=function(){return this}),e;function t(t){return function(e){return function i(e){if(s)throw new TypeError("Generator is already executing.");for(;d;)try{if(s=1,a&&(r=2&e[0]?a["return"]:e[0]?a["throw"]||((r=a["return"])&&r.call(a),0):a.next)&&!(r=r.call(a,e[1])).done)return r;switch(a=0,r&&(e=[2&e[0],r.value]),e[0]){case 0:case 1:r=e;break;case 4:return d.label++,{value:e[1],done:!1};case 5:d.label++,a=e[1],e=[0];continue;case 7:e=d.ops.pop(),d.trys.pop();continue;default:if(!(r=0<(r=d.trys).length&&r[r.length-1])&&(6===e[0]||2===e[0])){d=0;continue}if(3===e[0]&&(!r||e[1]>r[0]&&e[1]<r[3])){d.label=e[1];break}if(6===e[0]&&d.label<r[1]){d.label=r[1],r=e;break}if(r&&d.label<r[2]){d.label=r[2],d.ops.push(e);break}r[2]&&d.ops.pop(),d.trys.pop();continue}e=o.call(n,d)}catch(t){e=[6,t],a=0}finally{s=r=0}if(5&e[0])throw e[1];return{value:e[0]?e[1]:void 0,done:!0}}([t,e])}}}var f=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return function n(e,t){function i(){this.constructor=e}g(e,t),e.prototype=null===t?Object.create(t):(i.prototype=t.prototype,new i)}(t,e),t}(r),w={Custom:"custom-theme",Light:"light-theme",Dark:"dark-theme"},m={Top:0,Bottom:1};m[m.Top]="Top",m[m.Bottom]="Bottom";var y=function(){function e(e,t){this._serverEndpointUrl=e,this._http=t}return e.prototype.uploadFile=function(e,t){var i=new FormData;return i.append("ng-chat-destinatary-userid",t.id),i.append("file",e,e.name),this._http.post(this._serverEndpointUrl,i)},e}(),b=function(){function e(e,t){this.sanitizer=e,this._httpClient=t,this.UserStatus=c,this.MessageType=d,this.isCollapsed=!1,this.maximizeWindowOnNewMessage=!0,this.pollFriendsList=!1,this.pollingInterval=5e3,this.historyEnabled=!0,this.emojisEnabled=!0,this.linkfyEnabled=!0,this.audioEnabled=!0,this.searchEnabled=!0,this.audioSource="https://raw.githubusercontent.com/rpaschoal/ng-chat/master/src/ng-chat/assets/notification.wav",this.persistWindowsState=!0,this.title="Friends",this.messagePlaceholder="Type a message",this.searchPlaceholder="Search",this.browserNotificationsEnabled=!0,this.browserNotificationIconSource="https://raw.githubusercontent.com/rpaschoal/ng-chat/master/src/ng-chat/assets/notification.png",this.browserNotificationTitle="New message from",this.historyPageSize=10,this.hideFriendsList=!1,this.hideFriendsListOnUnsupportedViewport=!0,this.theme=w.Light,this.onUserClicked=new i.EventEmitter,this.onUserChatOpened=new i.EventEmitter,this.onUserChatClosed=new i.EventEmitter,this.onMessagesSeen=new i.EventEmitter,this.browserNotificationsBootstrapped=!1,this.hasPagedHistory=!1,this.statusDescription={online:"Online",busy:"Busy",away:"Away",offline:"Offline"},this.searchInput="",this.windowSizeFactor=320,this.friendsListWidth=262,this.unsupportedViewport=!1,this.isUploadingFile=!1,this.windows=[],this.isBootstrapped=!1}return Object.defineProperty(e.prototype,"localStorageKey",{get:function(){return"ng-chat-users-"+this.userId},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"filteredUsers",{get:function(){var t=this;return 0<this.searchInput.length?this.users.filter(function(e){return e.displayName.toUpperCase().includes(t.searchInput.toUpperCase())}):this.users},enumerable:!0,configurable:!0}),e.prototype.ngOnInit=function(){this.bootstrapChat()},e.prototype.onResize=function(e){this.viewPortTotalArea=e.target.innerWidth,this.NormalizeWindows()},e.prototype.NormalizeWindows=function(){var e=Math.floor((this.viewPortTotalArea-(this.hideFriendsList?0:this.friendsListWidth))/this.windowSizeFactor),t=this.windows.length-e;0<=t&&this.windows.splice(this.windows.length-t),this.updateWindowsState(this.windows),this.unsupportedViewport=this.hideFriendsListOnUnsupportedViewport&&e<1},e.prototype.bootstrapChat=function(){var i=this,e=null;if(null!=this.adapter&&null!=this.userId)try{this.viewPortTotalArea=window.innerWidth,this.initializeTheme(),this.initializeDefaultText(),this.initializeBrowserNotifications(),this.adapter.messageReceivedHandler=function(e,t){return i.onMessageReceived(e,t)},this.adapter.friendsListChangedHandler=function(e){return i.onFriendsListChanged(e)},this.pollFriendsList?(this.fetchFriendsList(!0),setInterval(function(){return i.fetchFriendsList(!1)},this.pollingInterval)):this.fetchFriendsList(!0),this.bufferAudioFile(),this.hasPagedHistory=this.adapter instanceof f,this.fileUploadUrl&&""!==this.fileUploadUrl&&(this.fileUploadAdapter=new y(this.fileUploadUrl,this._httpClient)),this.isBootstrapped=!0}catch(t){e=t}this.isBootstrapped||(console.error("ng-chat component couldn't be bootstrapped."),null==this.userId&&console.error("ng-chat can't be initialized without an user id. Please make sure you've provided an userId as a parameter of the ng-chat component."),null==this.adapter&&console.error("ng-chat can't be bootstrapped without a ChatAdapter. Please make sure you've provided a ChatAdapter implementation as a parameter of the ng-chat component."),e&&(console.error("An exception has occurred while initializing ng-chat. Details: "+e.message),console.error(e)))},e.prototype.initializeBrowserNotifications=function(){return function e(t,a,r,d){return new(r||(r=Promise))(function(e,i){function n(e){try{s(d.next(e))}catch(t){i(t)}}function o(e){try{s(d["throw"](e))}catch(t){i(t)}}function s(t){t.done?e(t.value):new r(function(e){e(t.value)}).then(n,o)}s((d=d.apply(t,a||[])).next())})}(this,void 0,void 0,function(){return u(this,function(e){switch(e.label){case 0:return this.browserNotificationsEnabled&&"Notification"in window?[4,Notification.requestPermission()]:[3,2];case 1:e.sent()&&(this.browserNotificationsBootstrapped=!0),e.label=2;case 2:return[2]}})})},e.prototype.initializeDefaultText=function(){this.localization||(this.localization={messagePlaceholder:this.messagePlaceholder,searchPlaceholder:this.searchPlaceholder,title:this.title,statusDescription:this.statusDescription,browserNotificationTitle:this.browserNotificationTitle,loadMessageHistoryPlaceholder:"Load older messages"})},e.prototype.initializeTheme=function(){if(this.customTheme)this.theme=w.Custom;else if(this.theme!=w.Light&&this.theme!=w.Dark)throw new Error('Invalid theme configuration for ng-chat. "'+this.theme+'" is not a valid theme value.')},e.prototype.fetchFriendsList=function(e){var t=this;this.adapter.listFriends().pipe(o.map(function(e){t.users=e})).subscribe(function(){e&&t.restoreWindowsState()})},e.prototype.fetchMessageHistory=function(i){var n=this;this.adapter instanceof f?(i.isLoadingHistory=!0,this.adapter.getMessageHistoryByPage(i.chattingTo.id,this.historyPageSize,++i.historyPage).pipe(o.map(function(e){e.forEach(function(e){return n.assertMessageType(e)}),i.messages=e.concat(i.messages),i.isLoadingHistory=!1;var t=1==i.historyPage?m.Bottom:m.Top;i.hasMoreMessages=e.length==n.historyPageSize,setTimeout(function(){return n.onFetchMessageHistoryLoaded(e,i,t,!0)})})).subscribe()):this.adapter.getMessageHistory(i.chattingTo.id).pipe(o.map(function(e){e.forEach(function(e){return n.assertMessageType(e)}),i.messages=e.concat(i.messages),i.isLoadingHistory=!1,setTimeout(function(){return n.onFetchMessageHistoryLoaded(e,i,m.Bottom)})})).subscribe()},e.prototype.onFetchMessageHistoryLoaded=function(e,t,i,n){if(void 0===n&&(n=!1),this.scrollChatWindow(t,i),t.hasFocus||n){var o=e.filter(function(e){return!e.seenOn});this.markMessagesAsRead(o),this.onMessagesSeen.emit(o)}},e.prototype.onFriendsListChanged=function(e){e&&(this.users=e)},e.prototype.onMessageReceived=function(e,t){if(e&&t){var i=this.openChatWindow(e);this.assertMessageType(t),i[1]&&this.historyEnabled||(i[0].messages.push(t),this.scrollChatWindow(i[0],m.Bottom),i[0].hasFocus&&(this.markMessagesAsRead([t]),this.onMessagesSeen.emit([t]))),this.emitMessageSound(i[0]),(this.maximizeWindowOnNewMessage||!i[1]&&!i[0].isCollapsed)&&this.emitBrowserNotification(i[0],t)}},e.prototype.openChatWindow=function(t,e,i){void 0===e&&(e=!1),void 0===i&&(i=!1);var n=this.windows.find(function(e){return e.chattingTo.id==t.id});if(n)return[n,!1];i&&this.onUserClicked.emit(t);var o=!i&&!this.maximizeWindowOnNewMessage,s={chattingTo:t,messages:[],isLoadingHistory:this.historyEnabled,hasFocus:!1,isCollapsed:o,hasMoreMessages:!1,historyPage:0};return this.historyEnabled&&this.fetchMessageHistory(s),this.windows.unshift(s),this.windows.length*this.windowSizeFactor>=this.viewPortTotalArea-(this.hideFriendsList?0:this.friendsListWidth)&&this.windows.pop(),this.updateWindowsState(this.windows),e&&!o&&this.focusOnWindow(s),this.onUserChatOpened.emit(t),[s,!0]},e.prototype.focusOnWindow=function(e,t){var i=this;void 0===t&&(t=function(){});var n=this.windows.indexOf(e);0<=n&&setTimeout(function(){i.chatWindowInputs&&i.chatWindowInputs.toArray()[n].nativeElement.focus();t()})},e.prototype.scrollChatWindow=function(e,i){var n=this;if(!e.isCollapsed){var o=this.windows.indexOf(e);setTimeout(function(){if(n.chatMessageClusters&&n.chatMessageClusters.toArray()[o]){var e=n.chatMessageClusters.toArray()[o].nativeElement,t=i===m.Top?0:e.scrollHeight;e.scrollTop=t}})}},e.prototype.markMessagesAsRead=function(e){var t=new Date;e.forEach(function(e){e.seenOn=t})},e.prototype.bufferAudioFile=function(){this.audioSource&&0<this.audioSource.length&&(this.audioFile=new Audio,this.audioFile.src=this.audioSource,this.audioFile.load())},e.prototype.emitMessageSound=function(e){this.audioEnabled&&!e.hasFocus&&this.audioFile&&this.audioFile.play()},e.prototype.emitBrowserNotification=function(e,t){if(this.browserNotificationsBootstrapped&&!e.hasFocus&&t){var i=new Notification(this.localization.browserNotificationTitle+" "+e.chattingTo.displayName,{body:t.message,icon:this.browserNotificationIconSource});setTimeout(function(){i.close()},t.message.length<=50?5e3:7e3)}},e.prototype.updateWindowsState=function(e){if(this.persistWindowsState){var t=e.map(function(e){return e.chattingTo.id});localStorage.setItem(this.localStorageKey,JSON.stringify(t))}},e.prototype.restoreWindowsState=function(){var t=this;try{if(this.persistWindowsState){var e=localStorage.getItem(this.localStorageKey);if(e&&0<e.length){var i=JSON.parse(e);this.users.filter(function(e){return 0<=i.indexOf(e.id)}).forEach(function(e){t.openChatWindow(e)})}}}catch(n){console.error("An error occurred while restoring ng-chat windows state. Details: "+n)}},e.prototype.getClosestWindow=function(e){var t=this.windows.indexOf(e);return 0<t?this.windows[t-1]:0==t&&1<this.windows.length?this.windows[t+1]:void 0},e.prototype.assertMessageType=function(e){e.type||(e.type=d.Text)},e.prototype.unreadMessagesTotal=function(e){var t=this;if(e){var i=e.messages.filter(function(e){return e.fromId!=t.userId&&!e.seenOn}).length;if(0<i)return 99<i?"99+":String(i)}return""},e.prototype.unreadMessagesTotalByUser=function(t){var e=this.windows.find(function(e){return e.chattingTo.id==t.id});return e?this.unreadMessagesTotal(e):""},e.prototype.onChatInputTyped=function(e,t){var i=this;switch(e.keyCode){case 13:if(t.newMessage&&""!=t.newMessage.trim()){var n=new l;n.fromId=this.userId,n.toId=t.chattingTo.id,n.message=t.newMessage,t.messages.push(n),this.adapter.sendMessage(n),t.newMessage="",this.scrollChatWindow(t,m.Bottom)}break;case 9:e.preventDefault();var o=this.windows.indexOf(t),s=this.chatWindowInputs.toArray()[o+(e.shiftKey?1:-1)];s||(s=this.chatWindowInputs.toArray()[0<o?0:this.chatWindowInputs.length-1]),s.nativeElement.focus();break;case 27:var a=this.getClosestWindow(t);a?this.focusOnWindow(a,function(){i.onCloseChatWindow(t)}):this.onCloseChatWindow(t)}},e.prototype.onCloseChatWindow=function(e){var t=this.windows.indexOf(e);this.windows.splice(t,1),this.updateWindowsState(this.windows),this.onUserChatClosed.emit(e.chattingTo)},e.prototype.onChatTitleClicked=function(e){this.isCollapsed=!this.isCollapsed},e.prototype.onChatWindowClicked=function(e){e.isCollapsed=!e.isCollapsed,this.scrollChatWindow(e,m.Bottom)},e.prototype.isAvatarVisible=function(e,t,i){if(t.fromId!=this.userId){if(0==i)return!0;if(e.messages[i-1].fromId!=t.fromId)return!0}return!1},e.prototype.toggleWindowFocus=function(e){var t=this;if(e.hasFocus=!e.hasFocus,e.hasFocus){var i=e.messages.filter(function(e){return null==e.seenOn&&e.toId==t.userId});i&&0<i.length&&(this.markMessagesAsRead(i),this.onMessagesSeen.emit(i))}},e.prototype.getStatusTitle=function(e){var t=e.toString().toLowerCase();return this.localization.statusDescription[t]},e.prototype.triggerOpenChatWindow=function(e){e&&this.openChatWindow(e)},e.prototype.triggerCloseChatWindow=function(t){var e=this.windows.find(function(e){return e.chattingTo.id==t});e&&this.onCloseChatWindow(e)},e.prototype.triggerToggleChatWindowVisibility=function(t){var e=this.windows.find(function(e){return e.chattingTo.id==t});e&&this.onChatWindowClicked(e)},e.prototype.triggerNativeFileUpload=function(){this.nativeFileInput.nativeElement.click()},e.prototype.onFileChosen=function(t){var i=this,e=this.nativeFileInput.nativeElement.files[0];this.isUploadingFile=!0,this.fileUploadAdapter.uploadFile(e,t.chattingTo).subscribe(function(e){i.isUploadingFile=!1,e.fromId=i.userId,t.messages.push(e),i.adapter.sendMessage(e),i.scrollChatWindow(t,m.Bottom),i.nativeFileInput.nativeElement.value=""})},e.decorators=[{type:i.Component,args:[{selector:"ng-chat",template:'<link *ngIf="customTheme" rel="stylesheet" [href]=\'sanitizer.bypassSecurityTrustResourceUrl(customTheme)\'>\r\n\r\n<div id="ng-chat" *ngIf="isBootstrapped && !unsupportedViewport" [ngClass]="theme">\r\n    <div *ngIf="!hideFriendsList" id="ng-chat-people" [ngClass]="{\'primary-outline-color\': true, \'primary-background\': true, \'ng-chat-people-collapsed\': isCollapsed}">\r\n        <a href="javascript:void(0);" class="ng-chat-title secondary-background shadowed" (click)="onChatTitleClicked($event)">\r\n            <span>\r\n                {{localization.title}}\r\n            </span>\r\n        </a>\r\n        <input *ngIf="searchEnabled" id="ng-chat-search_friend" class="friends-search-bar" type="search" [placeholder]="localization.searchPlaceholder" [(ngModel)]="searchInput" />\r\n        <ul id="ng-chat-users" *ngIf="!isCollapsed" [ngClass]="{\'offset-search\': searchEnabled}">\r\n            <li *ngFor="let user of filteredUsers" (click)="openChatWindow(user, true, true)">\r\n                <div *ngIf="!user.avatar"  class="icon-wrapper">\r\n                    <i class="user-icon"></i>\r\n                </div>\r\n                <img *ngIf="user.avatar" alt="" class="avatar" height="30" width="30"  src="{{user.avatar}}"/>\r\n                <strong title="{{user.displayName}}">{{user.displayName}}</strong>\r\n                <span [ngClass]="{\'ng-chat-user-status\': true, \'online\': user.status == UserStatus.Online, \'busy\': user.status == UserStatus.Busy, \'away\': user.status == UserStatus.Away, \'offline\': user.status == UserStatus.Offline}" title="{{getStatusTitle(user.status)}}"></span>\r\n                <span *ngIf="unreadMessagesTotalByUser(user).length > 0" class="ng-chat-unread-messages-count unread-messages-counter-container primary-text">{{unreadMessagesTotalByUser(user)}}</span>\r\n            </li>\r\n        </ul>\r\n    </div>\r\n    <div *ngFor="let window of windows; let i = index" [ngClass]="{\'ng-chat-window\': true, \'primary-outline-color\': true, \'ng-chat-window-collapsed\': window.isCollapsed}" [ngStyle]="{\'right\': (!hideFriendsList ? friendsListWidth : 0) + 20 + windowSizeFactor * i + \'px\'}">\r\n        <ng-container *ngIf="window.isCollapsed">\r\n            <div class="ng-chat-title secondary-background" (click)="onChatWindowClicked(window)">\r\n                <strong title="{{window.chattingTo.displayName}}">\r\n                    {{window.chattingTo.displayName}}\r\n                </strong>\r\n                <span [ngClass]="{\'ng-chat-user-status\': true, \'online\': window.chattingTo.status == UserStatus.Online, \'busy\': window.chattingTo.status == UserStatus.Busy, \'away\': window.chattingTo.status == UserStatus.Away, \'offline\': window.chattingTo.status == UserStatus.Offline}" title="{{getStatusTitle(window.chattingTo.status)}}"></span>\r\n                <span *ngIf="unreadMessagesTotal(window).length > 0" class="ng-chat-unread-messages-count unread-messages-counter-container primary-text">{{unreadMessagesTotal(window)}}</span>\r\n                <a href="javascript:void(0);" class="ng-chat-close primary-text" (click)="onCloseChatWindow(window)">X</a>\r\n            </div>\r\n        </ng-container>\r\n        <ng-container *ngIf="!window.isCollapsed">\r\n            <div class="ng-chat-title secondary-background" (click)="onChatWindowClicked(window)">\r\n                <strong title="{{window.chattingTo.displayName}}">\r\n                    {{window.chattingTo.displayName}}\r\n                </strong>\r\n                <span [ngClass]="{\'ng-chat-user-status\': true, \'online\': window.chattingTo.status == UserStatus.Online, \'busy\': window.chattingTo.status == UserStatus.Busy, \'away\': window.chattingTo.status == UserStatus.Away, \'offline\': window.chattingTo.status == UserStatus.Offline}" title="{{getStatusTitle(window.chattingTo.status)}}"></span>\r\n                <span *ngIf="unreadMessagesTotal(window).length > 0" class="ng-chat-unread-messages-count unread-messages-counter-container primary-text">{{unreadMessagesTotal(window)}}</span>\r\n                <a href="javascript:void(0);" class="ng-chat-close primary-text" (click)="onCloseChatWindow(window)">X</a>\r\n            </div>\r\n            <div #chatMessages class="ng-chat-messages primary-background">\r\n                <div *ngIf="window.isLoadingHistory" class="ng-chat-loading-wrapper">\r\n                    <div class="loader">Loading history...</div>\r\n                </div>\r\n                <div *ngIf="hasPagedHistory && window.hasMoreMessages && !window.isLoadingHistory" class="ng-chat-load-history">\r\n                \t<a class="load-history-action" (click)="fetchMessageHistory(window)">{{localization.loadMessageHistoryPlaceholder}}</a>\r\n                </div>\r\n\r\n                <div *ngFor="let message of window.messages; let i = index" [ngClass]="{\'ng-chat-message\': true, \'ng-chat-message-received\': message.fromId != userId}">\r\n                    <div *ngIf="!window.chattingTo.avatar && isAvatarVisible(window, message, i)" class="icon-wrapper">\r\n                        <i class="user-icon"></i>\r\n                    </div>\r\n                    <img *ngIf="window.chattingTo.avatar && isAvatarVisible(window, message, i)" alt="" class="avatar" height="30" width="30" [src]="window.chattingTo.avatar" />\r\n                    <ng-container [ngSwitch]="message.type">\r\n                        <span *ngSwitchCase="MessageType.Text" [innerHtml]="message.message | emojify:emojisEnabled | linkfy:linkfyEnabled" [ngClass]="{\'sent-chat-message-container\': message.fromId == userId, \'received-chat-message-container\': message.fromId != userId}"></span>\r\n                        <div *ngSwitchCase="MessageType.File" [ngClass]="{\'file-message-container\': true, \'received\': message.fromId != userId}">\r\n                            <div class="file-message-icon-container">\r\n                                <i class="paperclip-icon"></i>\r\n                            </div>\r\n                            <a class="file-details" [attr.href]="message.downloadUrl" target="_blank" rel="noopener noreferrer" (click)="this.markMessagesAsRead([message])" download>\r\n                                <span class="file-message-title" [attr.title]="message.message">{{message.message}}</span>\r\n                                <span *ngIf="message.fileSizeInBytes" class="file-message-size">{{message.fileSizeInBytes}} Bytes</span>\r\n                            </a>\r\n                        </div>\r\n                    </ng-container>\r\n                </div>\r\n            </div>\r\n\r\n            <div class="ng-chat-footer primary-outline-color primary-background">\r\n                <input #chatWindowInput \r\n                    type="text" \r\n                    [ngModel]="window.newMessage | emojify:emojisEnabled" \r\n                    (ngModelChange)="window.newMessage=$event" \r\n                    [placeholder]="localization.messagePlaceholder" \r\n                    [ngClass]="{\'chat-window-input\': true, \'has-side-action\': fileUploadAdapter}"\r\n                    (keydown)="onChatInputTyped($event, window)" \r\n                    (blur)="toggleWindowFocus(window)" \r\n                    (focus)="toggleWindowFocus(window)"/>\r\n\r\n                \x3c!-- File Upload --\x3e\r\n                <ng-container *ngIf="fileUploadAdapter">\r\n                    <a *ngIf="!isUploadingFile" class="btn-add-file" (click)="triggerNativeFileUpload()">\r\n                        <i class="upload-icon"></i>\r\n                    </a>\r\n                    <input type="file" #nativeFileInput style="display: none;" (change)="onFileChosen(window)" />\r\n                    <div *ngIf="isUploadingFile" class="loader"></div>\r\n                </ng-container>\r\n            </div>\r\n        </ng-container>\r\n    </div>\r\n</div>\r\n',styles:[".user-icon{box-sizing:border-box;background-color:#fff;border:2px solid;width:32px;height:20px;border-radius:64px 64px 0 0/64px;margin-top:14px;margin-left:-1px;display:inline-block;vertical-align:middle;position:relative;font-style:normal;color:#ddd;text-align:left;text-indent:-9999px}.user-icon:before{border:2px solid;background-color:#fff;width:12px;height:12px;top:-19px;border-radius:50%;position:absolute;left:50%;-webkit-transform:translateX(-50%);transform:translateX(-50%)}.user-icon:after,.user-icon:before{content:'';pointer-events:none}.upload-icon{position:absolute;margin-left:3px;margin-top:12px;width:13px;height:4px;border:1px solid currentColor;border-top:none;border-radius:1px}.upload-icon:before{content:'';position:absolute;top:-8px;left:6px;width:1px;height:9px;background-color:currentColor}.upload-icon:after{content:'';position:absolute;top:-8px;left:4px;width:4px;height:4px;border-top:1px solid currentColor;border-right:1px solid currentColor;-webkit-transform:rotate(-45deg);transform:rotate(-45deg)}.paperclip-icon{position:absolute;margin-left:9px;margin-top:2px;width:6px;height:12px;border-radius:4px 4px 0 0;border-left:1px solid currentColor;border-right:1px solid currentColor;border-top:1px solid currentColor;-webkit-transform:rotate(45deg);transform:rotate(45deg)}.paperclip-icon:before{content:'';position:absolute;top:11px;left:-1px;width:4px;height:6px;border-radius:0 0 3px 3px;border-left:1px solid currentColor;border-right:1px solid currentColor;border-bottom:1px solid currentColor}.paperclip-icon:after{content:'';position:absolute;left:1px;top:1px;width:2px;height:10px;border-radius:4px 4px 0 0;border-left:1px solid currentColor;border-right:1px solid currentColor;border-top:1px solid currentColor}",".loader,.loader:after,.loader:before{background:#e3e3e3;-webkit-animation:1s ease-in-out infinite load1;animation:1s ease-in-out infinite load1;width:1em;height:4em}.loader{color:#e3e3e3;text-indent:-9999em;margin:4px auto 0;position:relative;font-size:4px;-webkit-transform:translateZ(0);transform:translateZ(0);-webkit-animation-delay:-.16s;animation-delay:-.16s}.loader:after,.loader:before{position:absolute;top:0;content:''}.loader:before{left:-1.5em;-webkit-animation-delay:-.32s;animation-delay:-.32s}.loader:after{left:1.5em}@-webkit-keyframes load1{0%,100%,80%{box-shadow:0 0;height:4em}40%{box-shadow:0 -2em;height:5em}}@keyframes load1{0%,100%,80%{box-shadow:0 0;height:4em}40%{box-shadow:0 -2em;height:5em}}","#ng-chat{position:fixed;z-index:999;right:0;bottom:0;box-sizing:initial;font-size:11pt;text-align:left}.ng-chat-loading-wrapper{height:30px;text-align:center;font-size:.9em}#ng-chat-people{position:relative;width:240px;height:360px;border-width:1px;border-style:solid;margin-right:20px;box-shadow:0 4px 8px rgba(0,0,0,.25);border-bottom:0}#ng-chat-people.ng-chat-people-collapsed{height:30px}.ng-chat-close{text-decoration:none;float:right}.ng-chat-title,.ng-chat-title:hover{position:relative;z-index:2;height:30px;line-height:30px;font-size:.9em;padding:0 10px;display:block;text-decoration:none;color:inherit;font-weight:400;cursor:pointer}.ng-chat-title.shadowed{box-shadow:0 4px 8px rgba(0,0,0,.25)}.ng-chat-title>strong{font-weight:600;display:block;overflow:hidden;height:30px;text-overflow:ellipsis;white-space:nowrap;max-width:85%;float:left}.ng-chat-title>.ng-chat-user-status{float:left;margin-left:5px}#ng-chat-search_friend{display:block;padding:7px 10px;margin:10px auto 0;width:calc(100% - 20px);font-size:.9em;-webkit-appearance:searchfield}#ng-chat-users{padding:0 10px;list-style:none;margin:0;overflow:auto;position:absolute;top:42px;bottom:0;width:100%;box-sizing:border-box}#ng-chat-users.offset-search{top:84px}#ng-chat-users li{clear:both;margin-bottom:10px;overflow:hidden;cursor:pointer;max-height:30px}#ng-chat-users li>.icon-wrapper,#ng-chat-users li>img{float:left;margin-right:5px;border-radius:25px}#ng-chat-users li>.icon-wrapper{background-color:#bababa;overflow:hidden;width:30px;height:30px}#ng-chat-users li>.icon-wrapper>i{color:#fff;-webkit-transform:scale(.7);transform:scale(.7)}#ng-chat-users li>strong{float:left;line-height:30px;font-size:.8em;max-width:57%;max-height:30px;overflow:hidden;white-space:nowrap;text-overflow:ellipsis}#ng-chat-users li>.ng-chat-user-status{float:right}.ng-chat-user-status{border-radius:25px;width:8px;height:8px;margin-top:10px}.ng-chat-user-status.online{background-color:#92a400}.ng-chat-user-status.busy{background-color:#f91c1e}.ng-chat-user-status.away{background-color:#f7d21b}.ng-chat-user-status.offline{background-color:#bababa}.ng-chat-unread-messages-count{margin-left:5px;padding:0 5px;border-radius:25px;font-size:.9em;line-height:30px}.ng-chat-window{right:260px;height:360px;z-index:999;bottom:0;position:fixed;width:300px;border-width:1px;border-style:solid;border-bottom:0;box-shadow:0 4px 8px rgba(0,0,0,.25)}.ng-chat-window-collapsed{height:30px!important}.ng-chat-window .ng-chat-footer{box-sizing:border-box;padding:0;display:block;height:calc(10%);width:100%;border:none;border-top:1px solid transparent;border-color:inherit}.ng-chat-window .ng-chat-footer>input{font-size:.8em;box-sizing:border-box;padding:0 5px;display:block;height:100%;width:100%;border:none}.ng-chat-window .ng-chat-footer>input.has-side-action{width:calc(100% - 30px)}.ng-chat-window .ng-chat-footer .btn-add-file{position:absolute;right:5px;bottom:7px;height:20px;width:20px;cursor:pointer}.ng-chat-window .ng-chat-footer .loader{position:absolute;right:14px;bottom:8px}.ng-chat-window .ng-chat-load-history{height:30px;text-align:center;font-size:.8em}.ng-chat-window .ng-chat-load-history>a{border-radius:15px;cursor:pointer;padding:5px 10px}.ng-chat-window .ng-chat-messages{padding:10px;height:calc(90% - 30px);box-sizing:border-box;position:relative;overflow:auto}.ng-chat-window .ng-chat-messages .ng-chat-message{clear:both}.ng-chat-window .ng-chat-messages .ng-chat-message>.icon-wrapper,.ng-chat-window .ng-chat-messages .ng-chat-message>img{position:absolute;left:10px;border-radius:25px}.ng-chat-window .ng-chat-messages .ng-chat-message>.icon-wrapper{background-color:#bababa;overflow:hidden;width:30px;height:30px}.ng-chat-window .ng-chat-messages .ng-chat-message>.icon-wrapper>i{color:#fff;-webkit-transform:scale(.7);transform:scale(.7)}.ng-chat-window .ng-chat-messages .ng-chat-message>span{float:right;width:182px;padding:10px;border-radius:5px;margin-top:0;margin-bottom:5px;font-size:.9em;word-wrap:break-word}.ng-chat-window .ng-chat-messages .ng-chat-message.ng-chat-message-received>span{float:left;margin-left:40px;padding-top:7px;padding-bottom:7px;border-style:solid;border-width:3px;margin-top:0;margin-bottom:5px}.ng-chat-window .ng-chat-messages .ng-chat-message .file-message-container{float:right;width:196px;border-style:solid;border-width:3px;border-radius:5px;overflow:hidden;margin-bottom:5px;display:block;text-decoration:none;font-size:.9em}.ng-chat-window .ng-chat-messages .ng-chat-message .file-message-container.received{float:left;margin-left:40px;width:202px}.ng-chat-window .ng-chat-messages .ng-chat-message .file-message-container>.file-message-icon-container{width:20px;height:35px;padding:10px;float:left}.ng-chat-window .ng-chat-messages .ng-chat-message .file-message-container>.file-message-icon-container i{margin-top:8px}.ng-chat-window .ng-chat-messages .ng-chat-message .file-message-container>.file-details{float:left;padding:10px;width:calc(100% - 60px);color:currentColor;text-decoration:none}.ng-chat-window .ng-chat-messages .ng-chat-message .file-message-container>.file-details:hover{text-decoration:underline}.ng-chat-window .ng-chat-messages .ng-chat-message .file-message-container>.file-details span{display:block;width:100%;text-overflow:ellipsis;overflow:hidden;white-space:nowrap}.ng-chat-window .ng-chat-messages .ng-chat-message .file-message-container>.file-details .file-message-title{font-weight:700}.ng-chat-window .ng-chat-messages .ng-chat-message .file-message-container>.file-details .file-message-size{font-size:.8em;margin-top:5px}",".light-theme,.light-theme .primary-text{color:#5c5c5c;font-family:Arial,Helvetica,sans-serif}.light-theme .primary-background{background-color:#fff}.light-theme .secondary-background{background-color:#fafafa}.light-theme .primary-outline-color{border-color:#a3a3a3}.light-theme .friends-search-bar{background-color:#fff}.light-theme .load-history-action,.light-theme .unread-messages-counter-container{background-color:#e3e3e3}.light-theme .chat-window-input{background-color:#fff}.light-theme .sent-chat-message-container{background-color:#e3e3e3}.light-theme .received-chat-message-container{background-color:#fff;border-color:#e3e3e3}.light-theme .file-message-container{border-color:#e3e3e3}.light-theme .file-message-icon-container{background-color:#e3e3e3}",".dark-theme,.dark-theme .primary-text{color:#fff;font-family:Arial,Helvetica,sans-serif}.dark-theme .primary-background{background-color:#565656}.dark-theme .secondary-background{background-color:#444}.dark-theme .primary-outline-color{border-color:#353535}.dark-theme .friends-search-bar{background-color:#444;border:1px solid #444;color:#fff}.dark-theme .unread-messages-counter-container{background-color:#fff;color:#444}.dark-theme .load-history-action{background-color:#444}.dark-theme .chat-window-input{background-color:#444;color:#fff}.dark-theme .sent-chat-message-container{background-color:#444}.dark-theme .received-chat-message-container{background-color:#565656;border-color:#444}.dark-theme .file-message-container{border-color:#444}.dark-theme .file-message-icon-container,.dark-theme .ng-chat-footer{background-color:#444}"]}]}],e.ctorParameters=function(){return[{type:n.DomSanitizer},{type:t.HttpClient}]},e.propDecorators={adapter:[{type:i.Input}],userId:[{type:i.Input}],isCollapsed:[{type:i.Input}],maximizeWindowOnNewMessage:[{type:i.Input}],pollFriendsList:[{type:i.Input}],pollingInterval:[{type:i.Input}],historyEnabled:[{type:i.Input}],emojisEnabled:[{type:i.Input}],linkfyEnabled:[{type:i.Input}],audioEnabled:[{type:i.Input}],searchEnabled:[{type:i.Input}],audioSource:[{type:i.Input}],persistWindowsState:[{type:i.Input}],title:[{type:i.Input}],messagePlaceholder:[{type:i.Input}],searchPlaceholder:[{type:i.Input}],browserNotificationsEnabled:[{type:i.Input}],browserNotificationIconSource:[{type:i.Input}],browserNotificationTitle:[{type:i.Input}],historyPageSize:[{type:i.Input}],localization:[{type:i.Input}],hideFriendsList:[{type:i.Input}],hideFriendsListOnUnsupportedViewport:[{type:i.Input}],fileUploadUrl:[{type:i.Input}],theme:[{type:i.Input}],customTheme:[{type:i.Input}],onUserClicked:[{type:i.Output}],onUserChatOpened:[{type:i.Output}],onUserChatClosed:[{type:i.Output}],onMessagesSeen:[{type:i.Output}],chatMessageClusters:[{type:i.ViewChildren,args:["chatMessages"]}],chatWindowInputs:[{type:i.ViewChildren,args:["chatWindowInput"]}],nativeFileInput:[{type:i.ViewChild,args:["nativeFileInput"]}],onResize:[{type:i.HostListener,args:["window:resize",["$event"]]}]},e}(),x=[{patterns:[":)",":-)","=)"],unicode:"😃"},{patterns:[":D",":-D","=D"],unicode:"😀"},{patterns:[":(",":-(","=("],unicode:"🙁"},{patterns:[":|",":-|","=|"],unicode:"😐"},{patterns:[":*",":-*","=*"],unicode:"😙"},{patterns:["T_T","T.T"],unicode:"😭"},{patterns:[":O",":-O","=O",":o",":-o","=o"],unicode:"😮"},{patterns:[":P",":-P","=P",":p",":-p","=p"],unicode:"😋"},{patterns:[">.<"],unicode:"😣"},{patterns:["@.@"],unicode:"😵"},{patterns:["*.*"],unicode:"😍"},{patterns:["<3"],unicode:"❤️"},{patterns:["^.^"],unicode:"😊"},{patterns:[":+1"],unicode:"👍"},{patterns:[":-1"],unicode:"👎"}],v=function(){function e(){}return e.prototype.transform=function(i,e){return e&&i&&1<i.length&&x.forEach(function(t){t.patterns.forEach(function(e){i=i.replace(e,t.unicode)})}),i},e.decorators=[{type:i.Pipe,args:[{name:"emojify"}]}],e}(),C=function(){function e(){}return e.prototype.transform=function(e,t){if(t&&e&&1<e.length){var i,n,o;return i=/(\b(https?|ftp):\/\/[-A-Z0-9+&@#\/%?=~_|!:,.;]*[-A-Z0-9+&@#\/%=~_|])/gim,n=/(^|[^\/])(www\.[\S]+(\b|$))/gim,o=/(([a-zA-Z0-9\-\_\.])+@[a-zA-Z\_]+?(\.[a-zA-Z]{2,6})+)/gim,e.replace(i,'<a href="$1" target="_blank">$1</a>').replace(n,'$1<a href="http://$2" target="_blank">$2</a>').replace(o,'<a href="mailto:$1">$1</a>')}return e},e.decorators=[{type:i.Pipe,args:[{name:"linkfy"}]}],e}(),k=function(){function e(){}return e.decorators=[{type:i.NgModule,args:[{imports:[s.CommonModule,a.FormsModule,t.HttpClientModule],declarations:[b,v,C],exports:[b]}]}],e}();e.NgChatModule=k,e.ChatAdapter=r,e.Message=l,e.UserStatus=c,e.User=h,e.Window=p,e.PagedHistoryChatAdapter=f,e.Theme=w,e.ɵa=b,e.ɵb=v,e.ɵc=C,Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=ng-chat.umd.min.js.map