{"version":3,"file":"ng-chat.umd.js.map","sources":["ng://ng-chat/ng-chat/core/chat-adapter.ts","ng://ng-chat/ng-chat/core/message-type.enum.ts","ng://ng-chat/ng-chat/core/message.ts","ng://ng-chat/ng-chat/core/user-status.enum.ts","ng://ng-chat/ng-chat/core/user.ts","ng://ng-chat/ng-chat/core/window.ts","node_modules/tslib/tslib.es6.js","ng://ng-chat/ng-chat/core/paged-history-chat-adapter.ts","ng://ng-chat/ng-chat/core/theme.enum.ts","ng://ng-chat/ng-chat/core/scroll-direction.enum.ts","ng://ng-chat/ng-chat/core/default-file-upload-adapter.ts","ng://ng-chat/ng-chat/ng-chat.component.ts","ng://ng-chat/ng-chat/pipes/emojify.pipe.ts","ng://ng-chat/ng-chat/pipes/linkfy.pipe.ts","ng://ng-chat/ng-chat/ng-chat.module.ts"],"sourcesContent":["import { Observable } from 'rxjs';\r\nimport { Message } from \"./message\";\r\nimport { User } from \"./user\";\r\n\r\nexport abstract class ChatAdapter\r\n{\r\n    // ### Abstract adapter methods ###\r\n\r\n    public abstract listFriends(): Observable<User[]>;\r\n    \r\n    public abstract getMessageHistory(userId: any): Observable<Message[]>;\r\n\r\n    public abstract sendMessage(message: Message): void;\r\n\r\n    // ### Adapter/Chat income/ingress events ###\r\n\r\n    public onFriendsListChanged(users: User[]): void\r\n    {\r\n        this.friendsListChangedHandler(users);\r\n    }\r\n\r\n    public onMessageReceived(user: User, message: Message): void\r\n    {\r\n        this.messageReceivedHandler(user, message);\r\n    }\r\n    \r\n    // Event handlers\r\n    friendsListChangedHandler: (users: User[]) => void  = (users: User[]) => {};\r\n    messageReceivedHandler: (user: User, message: Message) => void = (user: User, message: Message) => {};\r\n}\r\n","export enum MessageType\r\n{\r\n    Text = 1,\r\n    File = 2\r\n}\r\n","import { MessageType } from './message-type.enum';\r\n\r\nexport class Message\r\n{\r\n    public type?: MessageType = MessageType.Text;\r\n    public fromId: any;\r\n    public toId: any;\r\n    public message: string;\r\n    public seenOn?: Date;\r\n}\r\n","export enum UserStatus\r\n{\r\n    Online,\r\n    Busy,\r\n    Away,\r\n    Offline\r\n}","import { UserStatus } from \"./user-status.enum\";\r\n\r\nexport class User\r\n{\r\n    public id: any;\r\n    public displayName: string;\r\n    public status: UserStatus;\r\n    public avatar: string;\r\n}","import { Message } from \"./message\";\r\nimport { User } from \"./user\";\r\n\r\nexport class Window\r\n{\r\n    public chattingTo: User;\r\n    public messages: Message[] = [];\r\n    public newMessage?: string = \"\";\r\n    \r\n    // UI Behavior properties\r\n    public isCollapsed?: boolean = false; \r\n    public isLoadingHistory: boolean = false;\r\n    public hasFocus: boolean = false;\r\n    public hasMoreMessages: boolean = true;\r\n    public historyPage: number = 0;\r\n}\r\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Observable } from 'rxjs';\r\nimport { Message } from \"./message\";\r\nimport { User } from \"./user\";\r\nimport { ChatAdapter } from \"./chat-adapter\";\r\n\r\n/**\r\n * @description Chat Adapter decorator class that adds pagination to load the history of messagesr. \r\n * You will need an existing @see ChatAdapter implementation\r\n */\r\nexport abstract class PagedHistoryChatAdapter extends ChatAdapter\r\n{   \r\n    abstract getMessageHistoryByPage(userId: any, size: number, page: number) : Observable<Message[]>;\r\n}\r\n","export enum Theme\r\n{\r\n    Custom = 'custom-theme',\r\n    Light = 'light-theme',\r\n    Dark = 'dark-theme'\r\n}\r\n","export enum ScrollDirection {\r\n    Top,\r\n    Bottom\r\n}","import { IFileUploadAdapter } from './file-upload-adapter';\r\nimport { HttpClient, HttpRequest, HttpEventType, HttpResponse, HttpHeaders } from '@angular/common/http';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { User } from './user';\r\nimport { Message } from './message';\r\n\r\nexport class DefaultFileUploadAdapter implements IFileUploadAdapter\r\n{\r\n    /**\r\n     * @summary Basic file upload adapter implementation for HTTP request form file consumption\r\n     * @param _serverEndpointUrl The API endpoint full qualified address that will receive a form file to process and return the metadata.\r\n     */\r\n    constructor(private _serverEndpointUrl: string, private _http: HttpClient) {\r\n    }\r\n\r\n    uploadFile(file: File, userTo: User): Observable<Message> {\r\n        const formData: FormData = new FormData();\r\n\r\n        //formData.append('ng-chat-sender-userid', currentUserId);\r\n        formData.append('ng-chat-destinatary-userid', userTo.id);\r\n        formData.append('file', file, file.name);\r\n\r\n        return this._http.post<Message>(this._serverEndpointUrl, formData);\r\n\r\n        // TODO: Leaving this if we want to track upload progress in detail in the future. Might need a different Subject generic type wrapper\r\n        // const fileRequest = new HttpRequest('POST', this._serverEndpointUrl, formData, {\r\n        //     reportProgress: true\r\n        // });\r\n\r\n        // const uploadProgress = new Subject<number>();\r\n        // const uploadStatus = uploadProgress.asObservable();\r\n\r\n        //const responsePromise = new Subject<Message>();\r\n\r\n        // this._http\r\n        //     .request(fileRequest)\r\n        //     .subscribe(event => {\r\n        //         // if (event.type == HttpEventType.UploadProgress)\r\n        //         // {\r\n        //         //     const percentDone = Math.round(100 * event.loaded / event.total);\r\n\r\n        //         //     uploadProgress.next(percentDone);\r\n        //         // }\r\n        //         // else if (event instanceof HttpResponse)\r\n        //         // {\r\n                    \r\n        //         //     uploadProgress.complete();\r\n        //         // }\r\n        //     });\r\n    }\r\n}\r\n","import { Component, Input, OnInit, ViewChildren, ViewChild, HostListener, Output, EventEmitter, ElementRef } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\n\r\nimport { ChatAdapter } from './core/chat-adapter';\r\nimport { User } from \"./core/user\";\r\nimport { Message } from \"./core/message\";\r\nimport { FileMessage } from \"./core/file-message\";\r\nimport { MessageType } from \"./core/message-type.enum\";\r\nimport { Window } from \"./core/window\";\r\nimport { UserStatus } from \"./core/user-status.enum\";\r\nimport { ScrollDirection } from \"./core/scroll-direction.enum\";\r\nimport { Localization, StatusDescription } from './core/localization';\r\nimport { IChatController } from './core/chat-controller';\r\nimport { PagedHistoryChatAdapter } from './core/paged-history-chat-adapter';\r\nimport { IFileUploadAdapter } from './core/file-upload-adapter';\r\nimport { DefaultFileUploadAdapter } from './core/default-file-upload-adapter';\r\nimport { Theme } from './core/theme.enum';\r\n\r\nimport { map } from 'rxjs/operators';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Component({\r\n    selector: 'ng-chat',\r\n    templateUrl: 'ng-chat.component.html',\r\n    styleUrls: [\r\n        'assets/icons.css',\r\n        'assets/loading-spinner.css',\r\n        'assets/ng-chat.component.default.css',\r\n        'assets/themes/ng-chat.theme.default.scss',\r\n        'assets/themes/ng-chat.theme.dark.scss'\r\n    ],\r\n})\r\n\r\nexport class NgChat implements OnInit, IChatController {\r\n    constructor(public sanitizer: DomSanitizer, private _httpClient: HttpClient) { }\r\n\r\n    // Exposes enums for the ng-template\r\n    public UserStatus = UserStatus;\r\n    public MessageType = MessageType;\r\n\r\n    @Input()\r\n    public adapter: ChatAdapter;\r\n\r\n    @Input()\r\n    public userId: any;\r\n\r\n    @Input()\r\n    public isCollapsed: boolean = false;\r\n\r\n    @Input()\r\n    public maximizeWindowOnNewMessage: boolean = true;\r\n\r\n    @Input()    \r\n    public pollFriendsList: boolean = false;\r\n\r\n    @Input()\r\n    public pollingInterval: number = 5000;\r\n\r\n    @Input()    \r\n    public historyEnabled: boolean = true;\r\n\r\n    @Input()    \r\n    public emojisEnabled: boolean = true;\r\n\r\n    @Input()    \r\n    public linkfyEnabled: boolean = true;\r\n\r\n    @Input()\r\n    public audioEnabled: boolean = true;\r\n\r\n    @Input()\r\n    public searchEnabled: boolean = true;\r\n\r\n    @Input() // TODO: This might need a better content strategy\r\n    public audioSource: string = 'https://raw.githubusercontent.com/rpaschoal/ng-chat/master/src/ng-chat/assets/notification.wav';\r\n\r\n    @Input()\r\n    public persistWindowsState: boolean = true;\r\n\r\n    @Input()\r\n    public title: string = \"Friends\";\r\n\r\n    @Input()\r\n    public messagePlaceholder: string = \"Type a message\";\r\n\r\n    @Input()\r\n    public searchPlaceholder: string = \"Search\";\r\n\r\n    @Input()\r\n    public browserNotificationsEnabled: boolean = true;\r\n\r\n    @Input() // TODO: This might need a better content strategy\r\n    public browserNotificationIconSource: string = 'https://raw.githubusercontent.com/rpaschoal/ng-chat/master/src/ng-chat/assets/notification.png';\r\n\r\n    @Input()\r\n    public browserNotificationTitle: string = \"New message from\";\r\n    \r\n    @Input()\r\n    public historyPageSize: number = 10;\r\n\r\n    @Input()\r\n    public localization: Localization;\r\n\r\n    @Input()\r\n    public hideFriendsList: boolean = false;\r\n\r\n    @Input()\r\n    public hideFriendsListOnUnsupportedViewport: boolean = true;\r\n\r\n    @Input()\r\n    public fileUploadUrl: string;\r\n\r\n    @Input()\r\n    public theme: Theme = Theme.Light;\r\n\r\n    @Input()\r\n    public customTheme: string;\r\n\r\n    @Output()\r\n    public onUserClicked: EventEmitter<User> = new EventEmitter<User>();\r\n\r\n    @Output()\r\n    public onUserChatOpened: EventEmitter<User> = new EventEmitter<User>();\r\n\r\n    @Output()\r\n    public onUserChatClosed: EventEmitter<User> = new EventEmitter<User>();\r\n    \r\n    @Output()\r\n    public onMessagesSeen: EventEmitter<Message[]> = new EventEmitter<Message[]>();\r\n\r\n    private browserNotificationsBootstrapped: boolean = false;\r\n\r\n    public hasPagedHistory: boolean = false;\r\n\r\n    // Don't want to add this as a setting to simplify usage. Previous placeholder and title settings available to be used, or use full Localization object.\r\n    private statusDescription: StatusDescription = {\r\n        online: 'Online',\r\n        busy: 'Busy',\r\n        away: 'Away',\r\n        offline: 'Offline'\r\n    };\r\n\r\n    private audioFile: HTMLAudioElement;\r\n\r\n    public searchInput: string = '';\r\n\r\n    protected users: User[];\r\n\r\n    private get localStorageKey(): string \r\n    {\r\n        return `ng-chat-users-${this.userId}`; // Appending the user id so the state is unique per user in a computer.   \r\n    }; \r\n\r\n    get filteredUsers(): User[]\r\n    {\r\n        if (this.searchInput.length > 0){\r\n            // Searches in the friend list by the inputted search string\r\n            return this.users.filter(x => x.displayName.toUpperCase().includes(this.searchInput.toUpperCase()));\r\n        }\r\n\r\n        return this.users;\r\n    }\r\n\r\n    // Defines the size of each opened window to calculate how many windows can be opened on the viewport at the same time.\r\n    public windowSizeFactor: number = 320;\r\n\r\n    // Total width size of the friends list section\r\n    public friendsListWidth: number = 262;\r\n\r\n    // Available area to render the plugin\r\n    private viewPortTotalArea: number;\r\n    \r\n    // Set to true if there is no space to display at least one chat window and 'hideFriendsListOnUnsupportedViewport' is true\r\n    public unsupportedViewport: boolean = false;\r\n\r\n    // File upload state\r\n    public isUploadingFile = false;\r\n    public fileUploadAdapter: IFileUploadAdapter;\r\n\r\n    windows: Window[] = [];\r\n\r\n    isBootstrapped: boolean = false;\r\n\r\n    @ViewChildren('chatMessages') chatMessageClusters: any;\r\n\r\n    @ViewChildren('chatWindowInput') chatWindowInputs: any;\r\n\r\n    @ViewChild('nativeFileInput') nativeFileInput: ElementRef;\r\n\r\n    ngOnInit() { \r\n        this.bootstrapChat();\r\n    }\r\n\r\n    @HostListener('window:resize', ['$event'])\r\n    onResize(event: any){\r\n       this.viewPortTotalArea = event.target.innerWidth;\r\n\r\n       this.NormalizeWindows();\r\n    }\r\n\r\n    // Checks if there are more opened windows than the view port can display\r\n    private NormalizeWindows(): void\r\n    {\r\n        let maxSupportedOpenedWindows = Math.floor((this.viewPortTotalArea - (!this.hideFriendsList ? this.friendsListWidth : 0)) / this.windowSizeFactor);\r\n        let difference = this.windows.length - maxSupportedOpenedWindows;\r\n\r\n        if (difference >= 0){\r\n            this.windows.splice(this.windows.length - difference);\r\n        }\r\n\r\n        this.updateWindowsState(this.windows);\r\n\r\n        // Viewport should have space for at least one chat window.\r\n        this.unsupportedViewport = this.hideFriendsListOnUnsupportedViewport && maxSupportedOpenedWindows < 1;\r\n    }\r\n\r\n    // Initializes the chat plugin and the messaging adapter\r\n    private bootstrapChat(): void\r\n    {\r\n        let initializationException = null;\r\n\r\n        if (this.adapter != null && this.userId != null)\r\n        {\r\n            try\r\n            {\r\n                this.viewPortTotalArea = window.innerWidth;\r\n\r\n                this.initializeTheme();\r\n                this.initializeDefaultText();\r\n                this.initializeBrowserNotifications();\r\n\r\n                // Binding event listeners\r\n                this.adapter.messageReceivedHandler = (user, msg) => this.onMessageReceived(user, msg);\r\n                this.adapter.friendsListChangedHandler = (users) => this.onFriendsListChanged(users);\r\n\r\n                // Loading current users list\r\n                if (this.pollFriendsList){\r\n                    // Setting a long poll interval to update the friends list\r\n                    this.fetchFriendsList(true);\r\n                    setInterval(() => this.fetchFriendsList(false), this.pollingInterval);\r\n                }\r\n                else\r\n                {\r\n                    // Since polling was disabled, a friends list update mechanism will have to be implemented in the ChatAdapter.\r\n                    this.fetchFriendsList(true);\r\n                }\r\n                \r\n                this.bufferAudioFile();\r\n\r\n                this.hasPagedHistory = this.adapter instanceof PagedHistoryChatAdapter;\r\n                \r\n                if (this.fileUploadUrl && this.fileUploadUrl !== \"\")\r\n                {\r\n                    this.fileUploadAdapter = new DefaultFileUploadAdapter(this.fileUploadUrl, this._httpClient);\r\n                }\r\n\r\n                this.isBootstrapped = true;\r\n            }\r\n            catch(ex)\r\n            {\r\n                initializationException = ex;\r\n            }\r\n        }\r\n\r\n        if (!this.isBootstrapped){\r\n            console.error(\"ng-chat component couldn't be bootstrapped.\");\r\n            \r\n            if (this.userId == null){\r\n                console.error(\"ng-chat can't be initialized without an user id. Please make sure you've provided an userId as a parameter of the ng-chat component.\");\r\n            }\r\n            if (this.adapter == null){\r\n                console.error(\"ng-chat can't be bootstrapped without a ChatAdapter. Please make sure you've provided a ChatAdapter implementation as a parameter of the ng-chat component.\");\r\n            }\r\n            if (initializationException)\r\n            {\r\n                console.error(`An exception has occurred while initializing ng-chat. Details: ${initializationException.message}`);\r\n                console.error(initializationException);\r\n            }\r\n        }\r\n    }\r\n\r\n    // Initializes browser notifications\r\n    private async initializeBrowserNotifications()\r\n    {\r\n        if (this.browserNotificationsEnabled && (\"Notification\" in window))\r\n        {\r\n            if (await Notification.requestPermission())\r\n            {\r\n                this.browserNotificationsBootstrapped = true;\r\n            }\r\n        }\r\n    }\r\n\r\n    // Initializes default text\r\n    private initializeDefaultText() : void\r\n    {\r\n        if (!this.localization)\r\n        {\r\n            this.localization = {\r\n                messagePlaceholder: this.messagePlaceholder,\r\n                searchPlaceholder: this.searchPlaceholder, \r\n                title: this.title,\r\n                statusDescription: this.statusDescription,\r\n                browserNotificationTitle: this.browserNotificationTitle,\r\n                loadMessageHistoryPlaceholder: \"Load older messages\"\r\n            };\r\n        }\r\n    }\r\n\r\n    private initializeTheme(): void\r\n    {\r\n        if (this.customTheme)\r\n        {\r\n            this.theme = Theme.Custom;\r\n        }\r\n        else if (this.theme != Theme.Light && this.theme != Theme.Dark)\r\n        {\r\n            // TODO: Use es2017 in future with Object.values(Theme).includes(this.theme) to do this check\r\n            throw new Error(`Invalid theme configuration for ng-chat. \"${this.theme}\" is not a valid theme value.`);\r\n        }\r\n    }\r\n\r\n    // Sends a request to load the friends list\r\n    private fetchFriendsList(isBootstrapping: boolean): void\r\n    {\r\n        this.adapter.listFriends()\r\n        .pipe(\r\n            map((users: User[]) => {\r\n                this.users = users;\r\n            })\r\n        ).subscribe(() => {\r\n            if (isBootstrapping)\r\n            {\r\n                this.restoreWindowsState();\r\n            }\r\n        });\r\n    }\r\n\r\n    fetchMessageHistory(window: Window) {\r\n        // Not ideal but will keep this until we decide if we are shipping pagination with the default adapter\r\n        if (this.adapter instanceof PagedHistoryChatAdapter)\r\n        {\r\n            window.isLoadingHistory = true;\r\n\r\n            this.adapter.getMessageHistoryByPage(window.chattingTo.id, this.historyPageSize, ++window.historyPage)\r\n            .pipe(\r\n                map((result: Message[]) => {\r\n                    result.forEach((message) => this.assertMessageType(message));\r\n                    \r\n                    window.messages = result.concat(window.messages);\r\n                    window.isLoadingHistory = false;\r\n    \r\n                    const direction: ScrollDirection = (window.historyPage == 1) ? ScrollDirection.Bottom : ScrollDirection.Top;\r\n                    window.hasMoreMessages = result.length == this.historyPageSize;\r\n                    \r\n                    setTimeout(() => this.onFetchMessageHistoryLoaded(result, window, direction, true));\r\n                })\r\n            ).subscribe();\r\n        }\r\n        else\r\n        {\r\n            this.adapter.getMessageHistory(window.chattingTo.id)\r\n            .pipe(\r\n                map((result: Message[]) => {\r\n                    result.forEach((message) => this.assertMessageType(message));\r\n    \r\n                    window.messages = result.concat(window.messages);\r\n                    window.isLoadingHistory = false;\r\n    \r\n                    setTimeout(() => this.onFetchMessageHistoryLoaded(result, window, ScrollDirection.Bottom));\r\n                })\r\n            ).subscribe();\r\n        }\r\n    }\r\n\r\n    private onFetchMessageHistoryLoaded(messages: Message[], window: Window, direction: ScrollDirection, forceMarkMessagesAsSeen: boolean = false): void \r\n    {\r\n        this.scrollChatWindow(window, direction)\r\n\r\n        if (window.hasFocus || forceMarkMessagesAsSeen)\r\n        {\r\n            const unseenMessages = messages.filter(m => !m.seenOn);\r\n\r\n            this.markMessagesAsRead(unseenMessages);\r\n            this.onMessagesSeen.emit(unseenMessages);\r\n        }\r\n    }\r\n\r\n    // Updates the friends list via the event handler\r\n    private onFriendsListChanged(users: User[]): void\r\n    {\r\n        if (users) \r\n        {\r\n            this.users = users;\r\n        }\r\n    }\r\n\r\n    // Handles received messages by the adapter\r\n    private onMessageReceived(user: User, message: Message)\r\n    {\r\n        if (user && message)\r\n        {\r\n            let chatWindow = this.openChatWindow(user);\r\n\r\n            this.assertMessageType(message);\r\n\r\n            if (!chatWindow[1] || !this.historyEnabled){\r\n                chatWindow[0].messages.push(message);\r\n\r\n                this.scrollChatWindow(chatWindow[0], ScrollDirection.Bottom);\r\n\r\n                if (chatWindow[0].hasFocus)\r\n                {\r\n                    this.markMessagesAsRead([message]);\r\n                    this.onMessagesSeen.emit([message]);\r\n                }\r\n            }\r\n\r\n            this.emitMessageSound(chatWindow[0]);\r\n            \r\n            // Github issue #58 \r\n            // Do not push browser notifications with message content for privacy purposes if the 'maximizeWindowOnNewMessage' setting is off and this is a new chat window.\r\n            if (this.maximizeWindowOnNewMessage || (!chatWindow[1] && !chatWindow[0].isCollapsed))\r\n            { \r\n                // Some messages are not pushed because they are loaded by fetching the history hence why we supply the message here\r\n                this.emitBrowserNotification(chatWindow[0], message);\r\n            }\r\n        }\r\n    }\r\n\r\n    // Opens a new chat whindow. Takes care of available viewport\r\n    // Returns => [Window: Window object reference, boolean: Indicates if this window is a new chat window]\r\n    public openChatWindow(user: User, focusOnNewWindow: boolean = false, invokedByUserClick: boolean = false): [Window, boolean]\r\n    {\r\n        // Is this window opened?\r\n        let openedWindow = this.windows.find(x => x.chattingTo.id == user.id);\r\n\r\n        if (!openedWindow)\r\n        {\r\n            if (invokedByUserClick) \r\n            {\r\n                this.onUserClicked.emit(user);\r\n            }\r\n\r\n            // Refer to issue #58 on Github \r\n            let collapseWindow = invokedByUserClick ? false : !this.maximizeWindowOnNewMessage;\r\n\r\n            let newChatWindow: Window = {\r\n                chattingTo: user,\r\n                messages:  [],\r\n                isLoadingHistory: this.historyEnabled,\r\n                hasFocus: false, // This will be triggered when the 'newMessage' input gets the current focus\r\n                isCollapsed: collapseWindow,\r\n                hasMoreMessages: false,\r\n                historyPage: 0\r\n            };\r\n\r\n            // Loads the chat history via an RxJs Observable\r\n            if (this.historyEnabled)\r\n            {\r\n                this.fetchMessageHistory(newChatWindow);\r\n            }\r\n\r\n            this.windows.unshift(newChatWindow);\r\n\r\n            // Is there enough space left in the view port ?\r\n            if (this.windows.length * this.windowSizeFactor >= this.viewPortTotalArea - (!this.hideFriendsList ? this.friendsListWidth : 0))\r\n            {                \r\n                this.windows.pop();\r\n            }\r\n\r\n            this.updateWindowsState(this.windows);\r\n            \r\n            if (focusOnNewWindow && !collapseWindow) \r\n            {\r\n                this.focusOnWindow(newChatWindow);\r\n            }\r\n            \r\n            this.onUserChatOpened.emit(user);\r\n\r\n            return [newChatWindow, true];\r\n        }\r\n        else\r\n        {\r\n            // Returns the existing chat window     \r\n            return [openedWindow, false];       \r\n        }\r\n    }\r\n\r\n    // Focus on the input element of the supplied window\r\n    private focusOnWindow(window: Window, callback: Function = () => {}) : void\r\n    {\r\n        let windowIndex = this.windows.indexOf(window);\r\n        if (windowIndex >= 0)\r\n        {\r\n            setTimeout(() => {\r\n                if (this.chatWindowInputs)\r\n                {\r\n                    let messageInputToFocus = this.chatWindowInputs.toArray()[windowIndex];\r\n                \r\n                    messageInputToFocus.nativeElement.focus(); \r\n                }\r\n\r\n                callback(); \r\n            });\r\n        } \r\n    }\r\n\r\n    // Scrolls a chat window message flow to the bottom\r\n    private scrollChatWindow(window: Window, direction: ScrollDirection): void\r\n    {\r\n        if (!window.isCollapsed){\r\n            let windowIndex = this.windows.indexOf(window);\r\n            setTimeout(() => {\r\n                if (this.chatMessageClusters){\r\n                    let targetWindow = this.chatMessageClusters.toArray()[windowIndex];\r\n\r\n                    if (targetWindow)\r\n                    {\r\n                        let element = this.chatMessageClusters.toArray()[windowIndex].nativeElement;\r\n                        let position = ( direction === ScrollDirection.Top ) ? 0 : element.scrollHeight;\r\n                        element.scrollTop = position;\r\n                    }\r\n                }\r\n            }); \r\n        }\r\n    }\r\n\r\n    // Marks all messages provided as read with the current time.\r\n    public markMessagesAsRead(messages: Message[]): void\r\n    {\r\n        let currentDate = new Date();\r\n\r\n        messages.forEach((msg)=>{\r\n            msg.seenOn = currentDate;\r\n        });\r\n    }\r\n\r\n    // Buffers audio file (For component's bootstrapping)\r\n    private bufferAudioFile(): void {\r\n        if (this.audioSource && this.audioSource.length > 0)\r\n        {\r\n            this.audioFile = new Audio();\r\n            this.audioFile.src = this.audioSource;\r\n            this.audioFile.load();\r\n        }\r\n    }\r\n\r\n    // Emits a message notification audio if enabled after every message received\r\n    private emitMessageSound(window: Window): void\r\n    {\r\n        if (this.audioEnabled && !window.hasFocus && this.audioFile) {\r\n            this.audioFile.play();\r\n        }\r\n    }\r\n\r\n    // Emits a browser notification\r\n    private emitBrowserNotification(window: Window, message: Message): void\r\n    {       \r\n        if (this.browserNotificationsBootstrapped && !window.hasFocus && message) {\r\n            let notification = new Notification(`${this.localization.browserNotificationTitle} ${window.chattingTo.displayName}`, {\r\n                'body': message.message,\r\n                'icon': this.browserNotificationIconSource\r\n            });\r\n\r\n            setTimeout(() => {\r\n                notification.close();\r\n            }, message.message.length <= 50 ? 5000 : 7000); // More time to read longer messages\r\n        }\r\n    }\r\n\r\n    // Saves current windows state into local storage if persistence is enabled\r\n    private updateWindowsState(windows: Window[]): void\r\n    {\r\n        if (this.persistWindowsState)\r\n        {\r\n            let usersIds = windows.map((w) => {\r\n                return w.chattingTo.id;\r\n            });\r\n\r\n            localStorage.setItem(this.localStorageKey, JSON.stringify(usersIds));\r\n        }\r\n    }\r\n\r\n    private restoreWindowsState(): void\r\n    {\r\n        try\r\n        {\r\n            if (this.persistWindowsState)\r\n            {\r\n                let stringfiedUserIds = localStorage.getItem(this.localStorageKey);\r\n\r\n                if (stringfiedUserIds && stringfiedUserIds.length > 0)\r\n                {\r\n                    let userIds = <number[]>JSON.parse(stringfiedUserIds);\r\n\r\n                    let usersToRestore = this.users.filter(u => userIds.indexOf(u.id) >= 0);\r\n\r\n                    usersToRestore.forEach((user) => {\r\n                        this.openChatWindow(user);\r\n                    });\r\n                }\r\n            }\r\n        }\r\n        catch (ex)\r\n        {\r\n            console.error(`An error occurred while restoring ng-chat windows state. Details: ${ex}`);\r\n        }\r\n    }\r\n\r\n    // Gets closest open window if any. Most recent opened has priority (Right)\r\n    private getClosestWindow(window: Window): Window | undefined\r\n    {   \r\n        let index = this.windows.indexOf(window);\r\n\r\n        if (index > 0)\r\n        {\r\n            return this.windows[index - 1];\r\n        }\r\n        else if (index == 0 && this.windows.length > 1)\r\n        {   \r\n            return this.windows[index + 1];\r\n        }\r\n    }\r\n\r\n    private assertMessageType(message: Message): void {\r\n        // Always fallback to \"Text\" messages to avoid rendenring issues\r\n        if (!message.type)\r\n        {\r\n            message.type = MessageType.Text;\r\n        }\r\n    }\r\n\r\n    // Returns the total unread messages from a chat window. TODO: Could use some Angular pipes in the future \r\n    unreadMessagesTotal(window: Window): string\r\n    {\r\n        if (window){\r\n            let totalUnreadMessages = window.messages.filter(x => x.fromId != this.userId && !x.seenOn).length;\r\n            \r\n            if (totalUnreadMessages > 0){\r\n\r\n                if (totalUnreadMessages > 99) \r\n                    return  \"99+\";\r\n                else\r\n                    return String(totalUnreadMessages); \r\n            }\r\n        }\r\n            \r\n        // Empty fallback.\r\n        return \"\";\r\n    }\r\n\r\n    unreadMessagesTotalByUser(user: User): string\r\n    {\r\n        let openedWindow = this.windows.find(x => x.chattingTo.id == user.id);\r\n\r\n        if (openedWindow){\r\n            return this.unreadMessagesTotal(openedWindow);\r\n        }\r\n            \r\n        // Empty fallback.\r\n        return \"\";\r\n    }\r\n\r\n    /*  Monitors pressed keys on a chat window\r\n        - Dispatches a message when the ENTER key is pressed\r\n        - Tabs between windows on TAB or SHIFT + TAB\r\n        - Closes the current focused window on ESC\r\n    */\r\n    onChatInputTyped(event: any, window: Window): void\r\n    {\r\n        switch (event.keyCode)\r\n        {\r\n            case 13:\r\n                if (window.newMessage && window.newMessage.trim() != \"\")\r\n                {\r\n                    let message = new Message();\r\n             \r\n                    message.fromId = this.userId;\r\n                    message.toId = window.chattingTo.id;\r\n                    message.message = window.newMessage;\r\n        \r\n                    window.messages.push(message);\r\n        \r\n                    this.adapter.sendMessage(message);\r\n        \r\n                    window.newMessage = \"\"; // Resets the new message input\r\n        \r\n                    this.scrollChatWindow(window, ScrollDirection.Bottom);\r\n                }\r\n                break;\r\n            case 9:\r\n                event.preventDefault();\r\n                \r\n                let currentWindowIndex = this.windows.indexOf(window);\r\n                let messageInputToFocus = this.chatWindowInputs.toArray()[currentWindowIndex + (event.shiftKey ? 1 : -1)]; // Goes back on shift + tab\r\n\r\n                if (!messageInputToFocus)\r\n                {\r\n                    // Edge windows, go to start or end\r\n                    messageInputToFocus = this.chatWindowInputs.toArray()[currentWindowIndex > 0 ? 0 : this.chatWindowInputs.length - 1]; \r\n                }\r\n\r\n                messageInputToFocus.nativeElement.focus();\r\n\r\n                break;\r\n            case 27:\r\n                let closestWindow = this.getClosestWindow(window);\r\n\r\n                if (closestWindow)\r\n                {\r\n                    this.focusOnWindow(closestWindow, () => { this.onCloseChatWindow(window); });\r\n                }\r\n                else\r\n                {\r\n                    this.onCloseChatWindow(window);\r\n                }\r\n        }\r\n    }\r\n\r\n    // Closes a chat window via the close 'X' button\r\n    onCloseChatWindow(window: Window): void \r\n    {\r\n        let index = this.windows.indexOf(window);\r\n\r\n        this.windows.splice(index, 1);\r\n\r\n        this.updateWindowsState(this.windows);\r\n\r\n        this.onUserChatClosed.emit(window.chattingTo);\r\n    }\r\n\r\n    // Toggle friends list visibility\r\n    onChatTitleClicked(event: any): void\r\n    {\r\n        this.isCollapsed = !this.isCollapsed;\r\n    }\r\n\r\n    // Toggles a chat window visibility between maximized/minimized\r\n    onChatWindowClicked(window: Window): void\r\n    {\r\n        window.isCollapsed = !window.isCollapsed;\r\n        this.scrollChatWindow(window, ScrollDirection.Bottom);\r\n    }\r\n\r\n    // Asserts if a user avatar is visible in a chat cluster\r\n    isAvatarVisible(window: Window, message: Message, index: number): boolean\r\n    {\r\n        if (message.fromId != this.userId){\r\n            if (index == 0){\r\n                return true; // First message, good to show the thumbnail\r\n            }\r\n            else{\r\n                // Check if the previous message belongs to the same user, if it belongs there is no need to show the avatar again to form the message cluster\r\n                if (window.messages[index - 1].fromId != message.fromId){\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    // Toggles a window focus on the focus/blur of a 'newMessage' input\r\n    toggleWindowFocus(window: Window): void\r\n    {\r\n        window.hasFocus = !window.hasFocus;\r\n        if(window.hasFocus) {\r\n            const unreadMessages = window.messages.filter(message => message.seenOn == null && message.toId == this.userId);\r\n            \r\n            if (unreadMessages && unreadMessages.length > 0)\r\n            {\r\n                this.markMessagesAsRead(unreadMessages);\r\n                this.onMessagesSeen.emit(unreadMessages);\r\n            }\r\n        }\r\n    }\r\n\r\n    // [Localized] Returns the status descriptive title\r\n    getStatusTitle(status: UserStatus) : any\r\n    {\r\n        let currentStatus = status.toString().toLowerCase();\r\n\r\n        return this.localization.statusDescription[currentStatus];\r\n    }\r\n\r\n    triggerOpenChatWindow(user: User): void {\r\n        if (user)\r\n        {\r\n            this.openChatWindow(user);\r\n        }\r\n    }\r\n\r\n    triggerCloseChatWindow(userId: any): void {\r\n        let openedWindow = this.windows.find(x => x.chattingTo.id == userId);\r\n\r\n        if (openedWindow){\r\n            this.onCloseChatWindow(openedWindow);\r\n        }\r\n    }\r\n\r\n    triggerToggleChatWindowVisibility(userId: any): void {\r\n        let openedWindow = this.windows.find(x => x.chattingTo.id == userId);\r\n\r\n        if (openedWindow){\r\n            this.onChatWindowClicked(openedWindow);\r\n        }\r\n    }\r\n\r\n    // Triggers native file upload for file selection from the user\r\n    triggerNativeFileUpload(): void\r\n    {\r\n        this.nativeFileInput.nativeElement.click();\r\n    }\r\n\r\n    // Handles file selection and uploads the selected file using the file upload adapter\r\n    onFileChosen(window: Window): void {\r\n        const file: File = this.nativeFileInput.nativeElement.files[0];\r\n\r\n        this.isUploadingFile = true;\r\n\r\n        // TODO: Handle failure\r\n        this.fileUploadAdapter.uploadFile(file, window.chattingTo)\r\n            .subscribe(fileMessage => {\r\n                this.isUploadingFile = false;\r\n\r\n                fileMessage.fromId = this.userId;\r\n\r\n                // Push file message to current user window   \r\n                window.messages.push(fileMessage);\r\n    \r\n                this.adapter.sendMessage(fileMessage);\r\n    \r\n                this.scrollChatWindow(window, ScrollDirection.Bottom);\r\n\r\n                // Resets the file upload element\r\n                this.nativeFileInput.nativeElement.value = '';\r\n            });\r\n    }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\nlet emojiDictionary = [\r\n    { patterns: [':)', ':-)', '=)'], unicode: 'ð' },\r\n    { patterns: [':D', ':-D', '=D'], unicode: 'ð' },\r\n    { patterns: [':(', ':-(', '=('], unicode: 'ð' },\r\n    { patterns: [':|', ':-|', '=|'], unicode: 'ð' },\r\n    { patterns: [':*', ':-*', '=*'], unicode: 'ð' },\r\n    { patterns: ['T_T', 'T.T'], unicode: 'ð­' },\r\n    { patterns: [':O', ':-O', '=O', ':o', ':-o', '=o'], unicode: 'ð®' },\r\n    { patterns: [':P', ':-P', '=P', ':p', ':-p', '=p'], unicode: 'ð' },\r\n    { patterns: ['>.<'], unicode: 'ð£' },\r\n    { patterns: ['@.@'], unicode: 'ðµ' },\r\n    { patterns: ['*.*'], unicode: 'ð' },\r\n    { patterns: ['<3'], unicode: 'â¤ï¸' },\r\n    { patterns: ['^.^'], unicode: 'ð' },\r\n    { patterns: [':+1'], unicode: 'ð' },\r\n    { patterns: [':-1'], unicode: 'ð' }\r\n];\r\n\r\n/*\r\n * Transforms common emoji text to UTF encoded emojis\r\n*/\r\n@Pipe({name: 'emojify'})\r\nexport class EmojifyPipe implements PipeTransform {\r\n    transform(message: string, pipeEnabled: boolean): string {\r\n        if (pipeEnabled && message && message.length > 1) {  \r\n            emojiDictionary.forEach(emoji => {\r\n                emoji.patterns.forEach(pattern => {\r\n                    message = message.replace(pattern, emoji.unicode);\r\n                })\r\n            });\r\n        }\r\n\r\n    return message;\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n/*\r\n * Transforms text containing URLs or E-mails to valid links/mailtos\r\n*/\r\n@Pipe({name: 'linkfy'})\r\nexport class LinkfyPipe implements PipeTransform {\r\n    transform(message: string, pipeEnabled: boolean): string {\r\n        if (pipeEnabled && message && message.length > 1)\r\n        {\r\n            let replacedText;\r\n            let replacePatternProtocol;\r\n            let replacePatternWWW;\r\n            let replacePatternMailTo;\r\n\r\n            // URLs starting with http://, https://, or ftp://\r\n            replacePatternProtocol = /(\\b(https?|ftp):\\/\\/[-A-Z0-9+&@#\\/%?=~_|!:,.;]*[-A-Z0-9+&@#\\/%=~_|])/gim;\r\n            replacedText = message.replace(replacePatternProtocol, '<a href=\"$1\" target=\"_blank\">$1</a>');\r\n\r\n            // URLs starting with \"www.\" (ignoring // before it).\r\n            replacePatternWWW = /(^|[^\\/])(www\\.[\\S]+(\\b|$))/gim;\r\n            replacedText = replacedText.replace(replacePatternWWW, '$1<a href=\"http://$2\" target=\"_blank\">$2</a>');\r\n\r\n            // Change email addresses to mailto:: links.\r\n            replacePatternMailTo = /(([a-zA-Z0-9\\-\\_\\.])+@[a-zA-Z\\_]+?(\\.[a-zA-Z]{2,6})+)/gim;\r\n            replacedText = replacedText.replace(replacePatternMailTo, '<a href=\"mailto:$1\">$1</a>');\r\n\r\n            return replacedText;\r\n        }\r\n        else\r\n            return message;\r\n    } \r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\nimport { NgChat } from './ng-chat.component';\r\nimport { EmojifyPipe } from './pipes/emojify.pipe';\r\nimport { LinkfyPipe } from './pipes/linkfy.pipe';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, FormsModule, HttpClientModule],\r\n  declarations: [NgChat, EmojifyPipe, LinkfyPipe],\r\n  exports: [NgChat]\r\n})\r\nexport class NgChatModule {\r\n}\r\n"],"names":["tslib_1.__extends","EventEmitter","map","Component","DomSanitizer","HttpClient","Input","Output","ViewChildren","ViewChild","HostListener","Pipe","NgModule","CommonModule","FormsModule","HttpClientModule"],"mappings":"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"}
