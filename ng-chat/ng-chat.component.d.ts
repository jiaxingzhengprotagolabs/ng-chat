import { OnInit, EventEmitter, ElementRef } from '@angular/core';
import { HttpClient } from '@angular/common/http';
import { DomSanitizer } from '@angular/platform-browser';
import { ChatAdapter } from './core/chat-adapter';
import { User } from "./core/user";
import { Message } from "./core/message";
import { MessageType } from "./core/message-type.enum";
import { Window } from "./core/window";
import { UserStatus } from "./core/user-status.enum";
import { Localization } from './core/localization';
import { IChatController } from './core/chat-controller';
import { IFileUploadAdapter } from './core/file-upload-adapter';
import { Theme } from './core/theme.enum';
export declare class NgChat implements OnInit, IChatController {
    sanitizer: DomSanitizer;
    private _httpClient;
    constructor(sanitizer: DomSanitizer, _httpClient: HttpClient);
    UserStatus: typeof UserStatus;
    MessageType: typeof MessageType;
    adapter: ChatAdapter;
    userId: any;
    isCollapsed: boolean;
    maximizeWindowOnNewMessage: boolean;
    pollFriendsList: boolean;
    pollingInterval: number;
    historyEnabled: boolean;
    emojisEnabled: boolean;
    linkfyEnabled: boolean;
    audioEnabled: boolean;
    searchEnabled: boolean;
    audioSource: string;
    persistWindowsState: boolean;
    title: string;
    messagePlaceholder: string;
    searchPlaceholder: string;
    browserNotificationsEnabled: boolean;
    browserNotificationIconSource: string;
    browserNotificationTitle: string;
    historyPageSize: number;
    localization: Localization;
    hideFriendsList: boolean;
    hideFriendsListOnUnsupportedViewport: boolean;
    fileUploadUrl: string;
    theme: Theme;
    customTheme: string;
    onUserClicked: EventEmitter<User>;
    onUserChatOpened: EventEmitter<User>;
    onUserChatClosed: EventEmitter<User>;
    onMessagesSeen: EventEmitter<Message[]>;
    private browserNotificationsBootstrapped;
    hasPagedHistory: boolean;
    private statusDescription;
    private audioFile;
    searchInput: string;
    protected users: User[];
    private readonly localStorageKey;
    readonly filteredUsers: User[];
    windowSizeFactor: number;
    friendsListWidth: number;
    private viewPortTotalArea;
    unsupportedViewport: boolean;
    isUploadingFile: boolean;
    fileUploadAdapter: IFileUploadAdapter;
    windows: Window[];
    isBootstrapped: boolean;
    chatMessageClusters: any;
    chatWindowInputs: any;
    nativeFileInput: ElementRef;
    ngOnInit(): void;
    onResize(event: any): void;
    private NormalizeWindows;
    private bootstrapChat;
    private initializeBrowserNotifications;
    private initializeDefaultText;
    private initializeTheme;
    private fetchFriendsList;
    fetchMessageHistory(window: Window): void;
    private onFetchMessageHistoryLoaded;
    private onFriendsListChanged;
    private onMessageReceived;
    openChatWindow(user: User, focusOnNewWindow?: boolean, invokedByUserClick?: boolean): [Window, boolean];
    private focusOnWindow;
    private scrollChatWindow;
    markMessagesAsRead(messages: Message[]): void;
    private bufferAudioFile;
    private emitMessageSound;
    private emitBrowserNotification;
    private updateWindowsState;
    private restoreWindowsState;
    private getClosestWindow;
    private assertMessageType;
    unreadMessagesTotal(window: Window): string;
    unreadMessagesTotalByUser(user: User): string;
    onChatInputTyped(event: any, window: Window): void;
    onCloseChatWindow(window: Window): void;
    onChatTitleClicked(event: any): void;
    onChatWindowClicked(window: Window): void;
    isAvatarVisible(window: Window, message: Message, index: number): boolean;
    toggleWindowFocus(window: Window): void;
    getStatusTitle(status: UserStatus): any;
    triggerOpenChatWindow(user: User): void;
    triggerCloseChatWindow(userId: any): void;
    triggerToggleChatWindowVisibility(userId: any): void;
    triggerNativeFileUpload(): void;
    onFileChosen(window: Window): void;
}
